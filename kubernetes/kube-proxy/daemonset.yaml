apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-proxy
  namespace: kube-system
  labels:
    k8s-app: kube-proxy
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      k8s-app: kube-proxy
  template:
    metadata:
      labels:
        k8s-app: kube-proxy
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/scheme: http
    spec:
      serviceAccountName: kube-proxy
      hostNetwork: true
      priorityClassName: system-node-critical
      initContainers:
        - name: init-kube-proxy-config
          image: busybox
          command:
            - sh
            - -c
            - "set -e\n while [ ! -e /etc/kubernetes/proxy-config/config.yaml ]; do sleep 1; done;\n
              cp /etc/kubernetes/proxy-config/config.yaml /etc/kubernetes/config/config.yaml\n
              sed -i \"s|%NODE_NAME%|$NODE_NAME|g\" /etc/kubernetes/config/config.yaml"
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - mountPath: /etc/kubernetes/proxy-config
              name: proxy-config
              readOnly: true
            - mountPath: /etc/kubernetes/config
              name: config
              readOnly: false
      containers:
        - name: kube-proxy
          image: "{{- .HyperkubeRepository -}}:{{- .HyperkubeVersion -}}"
          resources:
            requests:
              memory: "100Mi"
              cpu: "50m"
            limits:
              memory: "200Mi"
              cpu: "150m"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 10256
              scheme: HTTP
          command:
            - /hyperkube
            - proxy
            - --config=/etc/kubernetes/config/config.yaml
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /etc/ssl/certs
              name: ssl-certs-host
              readOnly: true
            - mountPath: /var/run/dbus
              name: dbus
              readOnly: false
            - mountPath: /etc/kubernetes/ssl
              name: ssl-certs-kubernetes
              readOnly: true
            - mountPath: /etc/kubernetes/config/
              name: config
              readOnly: true
            - mountPath: /etc/kubernetes/proxy-config
              name: proxy-config
              readOnly: true
          ports:
            - name: http
              containerPort: 10249
      tolerations:
        - operator: "Exists"
      volumes:
        - hostPath:
            path: /usr/share/ca-certificates
          name: ssl-certs-host
        - hostPath:
            path: /var/run/dbus
          name: dbus
        - hostPath:
            path: /etc/kubernetes/ssl
          name: ssl-certs-kubernetes
        - configMap:
            name: kube-proxy
          name: proxy-config
        - emptyDir: {}
          name: config
