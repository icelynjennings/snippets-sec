apiVersion: apps/v1
kind: Deployment
metadata:
  name: sealed-secrets
  namespace: kube-system
  labels:
    app: sealed-secrets
spec:
  selector:
    matchLabels:
      app: sealed-secrets
  template:
    metadata:
      labels:
        app: sealed-secrets
    spec:
      initContainers:
        - name: fetch-private-key
          image: kubectl:v1.11.0
          command: ["/bin/sh", "-c"]
          args:
            - >
              set -x;
              if ! kubectl get secrets -n kube-system -o name sealed-secrets-key ; then
                LOGIN=$(curl -s -L -X POST "https://vault.icelyn.io:8200/v1/auth/approle/login" -d "{\"role_id\": \"$APPROLE_ROLE_ID\", \"secret_id\": \"$APPROLE_SECRET_ID\"}")
                TOKEN=$(echo $LOGIN | jq -r '.auth.client_token')
                NONCE=$(echo $LOGIN | jq -r '.auth.metadata.nonce')
                RESULT-$(curl -s -L -H "X-Vault-Token: $TOKEN" -X GET "https://vault.icelyn.io:8200/v1/machines/ci/sealed-secrets") 
                echo $RESULT | jq -r '.data["private-key"]' > tls.key
                apk --no-cache add openssl
                openssl rsa -in tls.key -outform PEM -out tls.pem
                openssl req -subj "/CN=sealed-secrets" -key tls.key -new -x509 -days 365 -out cert.pem
                kubectl create secret tls sealed-secrets-key --key=tls.key -n kube-system --cert='cert.pem'
              fi;
          env:
            - name: APPROLE_ROLE_ID
              valueFrom:
                secretKeyRef:
                  name: vault-approle
                  key: role_id
            - name: APPROLE_SECRET_ID
              valueFrom:
                secretKeyRef:
                  name: vault-approle
                  key: secret_id
          volumeMounts:
            - name: vault-nonce
              mountPath: /etc/vault
      containers:
        - command:
            - controller
          image: sealed-secrets-controller # ownerRef
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
          name: sealed-secrets
          ports:
            - containerPort: 8080
              name: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
      volumes:
        - name: vault-nonce
          hostPath:
            path: /etc/vault
      serviceAccountName: sealed-secrets
